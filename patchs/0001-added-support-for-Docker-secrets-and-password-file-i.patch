From 2a249b0bac6e7cf3cb743c909e1ace41b7a8970e Mon Sep 17 00:00:00 2001
From: John <hello@johnthenerd.com>
Date: Sat, 19 Sep 2020 15:19:21 -0230
Subject: [PATCH 01/85] added support for Docker secrets and password file in
 the Docker image

this means we no longer have to hardcode the password in the docker-compose file, and can treat the file as configuration rather than a secret.
---
 docker/alpine/Dockerfile    | 12 +++---------
 docker/alpine/README.md     | 26 ++++++++++++++++++++++++++
 docker/alpine/entrypoint.sh | 19 +++++++++++++++++++
 3 files changed, 48 insertions(+), 9 deletions(-)
 create mode 100755 docker/alpine/entrypoint.sh

diff --git a/docker/alpine/Dockerfile b/docker/alpine/Dockerfile
index 304212e..92cd629 100644
--- a/docker/alpine/Dockerfile
+++ b/docker/alpine/Dockerfile
@@ -48,12 +48,6 @@ RUN set -ex \
 
 USER nobody
 
-CMD exec ss-server \
-      -s $SERVER_ADDR \
-      -p $SERVER_PORT \
-      -k ${PASSWORD:-$(hostname)} \
-      -m $METHOD \
-      -t $TIMEOUT \
-      -d $DNS_ADDRS \
-      -u \
-      $ARGS
+COPY ./docker/alpine/entrypoint.sh /entrypoint.sh
+
+CMD /entrypoint.sh
diff --git a/docker/alpine/README.md b/docker/alpine/README.md
index 04ae9ed..e347997 100644
--- a/docker/alpine/README.md
+++ b/docker/alpine/README.md
@@ -56,6 +56,32 @@ $ docker run -e PASSWORD=9MLSpPmNt -p 8388:8388 -p 8388:8388/udp -d --restart al
 ```
 > :warning: Click [here][6] to generate a strong password to protect your server.
 
+### With password as a mounted file or a Docker secret (swarm only)
+
+Instead of hardcoding a password to the docker-compose file or `docker run` command, you can mount in a file that contains the password. To do so, pass the path that you mounted to the container as the `PASSWORD_FILE` environment variable.
+
+If you are running Docker Swarm, you can also utilize Docker secrets. To do so, pass the name of the secret as the `PASSWORD_SECRET` environment variable. If you specify both `PASSWORD_FILE` and `PASSWORD_SECRET`, the latter will take effect.
+
+This is a sample `docker-compose.yml` file that uses the external Docker secret named `shadowsocks` as the password.
+
+```yaml
+shadowsocks:
+  image: shadowsocks/shadowsocks-libev
+  ports:
+    - "8388:8388"
+  environment:
+    - METHOD=aes-256-gcm
+    - PASSWORD_SECRET=shadowsocks
+  secrets:
+    - shadowsocks
+```
+
+This is a sample `docker service create` command that uses the external Docker secret named `shadowsocks` as the password.
+
+```bash
+docker service create -e PASSWORD_SECRET=shadowsocks -p 8388:8388 -p 8388:8388/udp --secret shadowsocks shadowsocks/shadowsocks-libev
+```
+
 ### With other customizations
 Besides `PASSWORD`, the image also defines the following environment variables that you can customize:
 * `SERVER_ADDR`: the IP/domain to bind to, defaults to `0.0.0.0`
diff --git a/docker/alpine/entrypoint.sh b/docker/alpine/entrypoint.sh
new file mode 100755
index 0000000..c3655ef
--- /dev/null
+++ b/docker/alpine/entrypoint.sh
@@ -0,0 +1,19 @@
+#!/bin/sh
+
+if [[ -f "$PASSWORD_FILE" ]]; then
+    PASSWORD=$(cat "$PASSWORD_FILE")
+fi
+
+if [[ -f "/var/run/secrets/$PASSWORD_SECRET" ]]; then
+    PASSWORD=$(cat "/var/run/secrets/$PASSWORD_SECRET")
+fi
+
+exec ss-server \
+      -s $SERVER_ADDR \
+      -p $SERVER_PORT \
+      -k ${PASSWORD:-$(hostname)} \
+      -m $METHOD \
+      -t $TIMEOUT \
+      -d $DNS_ADDRS \
+      -u \
+      $ARGS
-- 
2.25.1

